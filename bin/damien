#!/usr/bin/env node
const { name, version = 'dev' } = require('../package')
const { launchSubprocess } = require('../lib/launch-subprocess')
const { getOption, buildOptionsTable, removeOptionFromArgv } = require('../lib/cli')

const ALLOWED_OPTIONS = [
  {
    name: 'help',
    alias: 'h',
    description: 'Show help and exit',
    defaultValue: false
  },
  {
    name: 'version',
    alias: 'v',
    description: 'Show version and exit',
    defaultValue: false
  },
  {
    name: 'watch',
    alias: 'w',
    description: 'Watch directory <path> for file changes',
    defaultValue: process.cwd()
  },
  {
    name: 'delay',
    alias: 'd',
    description: 'Debounce restart for <n> milliseconds',
    defaultValue: 2000
  }
]

const argv = [...process.argv]
const [hasHelp, hasVersion, watch, delay] = ALLOWED_OPTIONS.map(option => getOption(option, argv))

if (hasVersion) {
  console.log(version)
  process.exit(0)
}

if (hasHelp) {
  console.log(`
Usage: ${name} [OPTIONS] [script.js]

Relaunches script.js on file changes.

${buildOptionsTable(ALLOWED_OPTIONS)}
`)
  process.exit(0)
}

const [_node, _daemonize, ...rest] = process.argv
const [script, ...args] = rest.reverse()

let argsss = args.reverse()

ALLOWED_OPTIONS.forEach(opt => {
  argsss = removeOptionFromArgv(opt, argsss)
})

launchSubprocess({ script, watch, delay, args: argsss })
